#
# "THE BEER-WARE LICENSE" (Revision CS-42):
#
# This file was written by the CodeShop developers.  As long as you
# retain this notice you can do whatever you want with it.
# If we meet some day, and you think this file is worth it, you can
# buy us a beer in return.  Even if you do that, this file still
# comes WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#

import os ;
import errors ;

rule require-from-environ ( name )
{
  local value = [ os.environ $(name) ] ;
  if $(value) = ""
  {
    errors.error "no value for '$(name)' found in environment" ;
  }
  return $(value) ;
}

path-constant stage-dir : [ require-from-environ stage-dir ] ;

project oss
: requirements
  <cxxstd>17
  <debug-symbols>on
  <toolset>msvc:<cxxflags>/wd4251 # class needs to have dll-interface
  <toolset>msvc:<cxxflags>/wd4275 # non dll-interface class used as base
  <toolset>msvc:<cxxflags>/wd4910 # dllexport on extern template
  <target-os>windows:<define>NOMINMAX
  <target-os>windows:<define>WIN32_LEAN_AND_MEAN
  <threading>multi
  <target-os>linux:<linkflags>-Wl,--enable-new-dtags
  <target-os>linux:<linkflags>-Wl,-rpath,\\$ORIGIN/../lib
  <visibility>hidden
: default-build
# <variant>release
  <address-model>64
;

rule dll-subdir-location ( parent-dir )
{
  local subdir = lib ;
  if [ os.name ] = NT
  {
    subdir = bin ;
  }

  return <location>$(parent-dir)/$(subdir) ;
} 

rule stage-dll-location ( properties * )
{
  return [ dll-subdir-location $(stage-dir) ] ;
}

rule deploy-dll-location ( properties * )
{
  local dest-dir = [ require-from-environ dest-dir ] ;
  return [ dll-subdir-location $(dest-dir) ] ;
}

rule deploy-exe-location ( properties * )
{
  local dest-dir = [ require-from-environ dest-dir ] ;
  return <location>$(dest-dir)/bin ;
}
