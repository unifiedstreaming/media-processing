#
# "THE BEER-WARE LICENSE" (Revision CS-42):
#
# This file was written by the CodeShop developers.  As long as you
# retain this notice you can do whatever you want with it.
# If we meet some day, and you think this file is worth it, you can
# buy us a beer in return.  Even if you do that, this file still
# comes WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#

#
# Common stuff for packaging backends
#

include usp-builder/USPCommon.mki

#
# $(call checked-pkg-version-or-revision,<variable name>)
#
checked-pkg-version-or-revision = $(strip \
  $(if $(filter-out 1,$(words $($1))), \
    $(error $1 '$($1)' must contain exactly one word) \
  ) \
  $(if $(filter-out $(alnums) + . ~,$(call split-word,$($1))), \
    $(error $1 '$($1)' may only contain alphanumerics, '+', '.', and '~') \
  ) \
  $($1) \
)

#
# $(call checked-apache-modules-dir,<apxs output>)
#
checked-apache-modules-dir = $(strip \
  $(if $(strip $1), \
    $1 \
  , \
    $(error 'apxs -q LIBEXECDIR' failed) \
  ) \
)

#
# $(apache-modules-dir)
#
cached-apache-modules-dir :=
apache-modules-dir = $(strip \
  $(if $(cached-apache-modules-dir), \
    \
  , \
    $(eval cached-apache-modules-dir := \
      $(call checked-apache-modules-dir,$(shell apxs -q LIBEXECDIR))) \
  ) \
  $(cached-apache-modules-dir) \
)

#
# $(call checked-apache-conf-dir,<apxs output>)
#
checked-apache-conf-dir = $(strip \
  $(if $(strip $1), \
    $1 \
  , \
    $(error 'apxs -q SYSCONFDIR' failed) \
  ) \
)

#
# $(apache-conf-dir)
#
cached-apache-conf-dir :=
apache-conf-dir = $(strip \
  $(if $(cached-apache-conf-dir), \
    \
  , \
    $(eval cached-apache-conf-dir := \
      $(call checked-apache-conf-dir,$(shell apxs -q SYSCONFDIR))) \
  ) \
  $(cached-apache-conf-dir) \
)

#
# $(call installed-apache-conf-file-name,<source file>,<prefix>*)
#
installed-apache-conf-file-name = $2$(patsubst %.in,%,$(notdir $1))

#
# $(call subst-or-copy-apache-conf,<source file>,<target dir>,<prefix>*)
#
subst-or-copy-apache-conf = $(strip \
  $(if $(filter %.in,$1), \
    $(usp-sed) 's|@AP_LIBEXECDIR@|$(apache-modules-dir)|g' \
      "$(call to-shell,$1)" \
      >"$(call to-shell,$2/$(call installed-apache-conf-file-name,$1,$3))" \
  , \
    $(usp-cp) \
      "$(call to-shell,$1)" \
      "$(call to-shell,$2/$(call installed-apache-conf-file-name,$1,$3))" \
  ) \
)
      
#
# $(call distro-path,<relative path in artifacts dir>)
#
distro-path = $(strip \
  $(if $(filter apache2/%,$1), \
    $(patsubst apache2/%,$(patsubst /%,%,$(apache-modules-dir))/%,$1) \
  , \
    usr/$1 \
  ) \
)

#
# $(call distro-dirs,<relative path in artifact dir>*)
#
distro-dirs = $(strip \
  $(call dedup, \
    $(patsubst %/,%, \
      $(dir \
        $(foreach a,$1, \
          $(call distro-path,$a) \
        ) \
      ) \
    ) \
  ) \
)

#
# $(call service-name,<service source file>)
#
service-name = $(call notdir-basename,$1)

#
# $(call service-suffix,<service source file>)
#
service-suffix = $(suffix $1)

#
# $(call read-link,<path>)
#
read-link = $(if $(windows),,$(shell readlink "$(call to-shell,$1)"))

#
# $(call check-packaging-build-setting,<name>,<required value>)
#
check-packaging-build-setting = $(strip \
  $(if $(filter-out $2,$($1)), \
    $(error $1 must be $(if $2,'$2',empty) for packaging) \
  ) \
)

#
# Check build settings
#
$(call check-packaging-build-setting,address-model,$(default-address-model))
$(call check-packaging-build-setting,address-sanitizer,)
$(call check-packaging-build-setting,thread-sanitizer,)
$(call check-packaging-build-setting,toolset,$(default-toolset))
$(call check-packaging-build-setting,undefined-sanitizer,)
$(call check-packaging-build-setting,variant,release)

#
# Get required settings
#
override artifacts-dir := $(call to-make,$(call required-value,artifacts-dir))

override pkg-version := $(if $(pkg-version),$(call checked-pkg-version-or-revision,pkg-version),$(call required-value,pkg-version))

override pkgs-dir := $(call to-make,$(call non-relative-path,$(call required-value,pkgs-dir)))

override package := $(call required-value,package)

override license := $(call required-value,license)

override packaging-work-dir := $(call to-make,$(call required-value,packaging-work-dir))

override with-symbol-pkg := $(if $(call find-files,%,$(artifacts-dir)),yes)

#
# Get optional settings
#
override pkg-description := $(if $(pkg-description),$(pkg-description),not specified)

override pkg-maintainer := $(if $(pkg-maintainer),$(pkg-maintainer),not specified)

override pkg-revision := $(if $(pkg-revision),$(call checked-pkg-version-or-revision,pkg-revision),1)

override prereq-packages := $(foreach pkg,$(prereq-packages),$(pkg))

override conf-files := $(foreach f,$(conf-files),$(call non-relative-path,$f))

override doc-files := $(foreach f,$(doc-files),$(call non-relative-path,$f))

override openrc-files := $(foreach f,$(openrc-files),$(call non-relative-path,$f))

override service-files := $(foreach f,$(service-files),$(call non-relative-path,$f))

