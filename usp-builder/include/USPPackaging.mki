#
# "THE BEER-WARE LICENSE" (Revision CS-42):
#
# This file was written by the CodeShop developers.  As long as you
# retain this notice you can do whatever you want with it.
# If we meet some day, and you think this file is worth it, you can
# buy us a beer in return.  Even if you do that, this file still
# comes WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#

#
# Common stuff for packaging backends
#

include USPCommon.mki

#
# $(call checked-pkg-version-or-revision,<variable name>)
#
checked-pkg-version-or-revision = $(strip \
  $(if $(filter-out 1,$(words $($1))), \
    $(error $1 '$($1)' must contain exactly one word) \
  ) \
  $(if $(filter-out $(alnums) + . ~,$(call split-word,$($1))), \
    $(error $1 '$($1)' may only contain alphanumerics, '+', '.', and '~') \
  ) \
  $($1) \
)

#
# Subdirectories for 'special' files in the artifacts dir

config-artifacts-dir := etc
doc-artifacts-dir := doc

#
# $(call filter-config-artifacts,<relative path in artifacts dir>*)
#
filter-config-artifacts = $(filter $(config-artifacts-dir)/%,$1)

#
# $(call filter-doc-artifacts,<relative path in artifacts dir>*)
#
filter-doc-artifacts = $(filter $(doc-artifacts-dir)/%,$1)

#
# $(call distro-path,<relative path in artifacts dir>)
#
distro-path = $(strip \
  $(if $(filter $(config-artifacts-dir)/%,$1), \
    $(patsubst $(config-artifacts-dir)/%,etc/%,$1) \
  , \
    $(if $(filter $(doc-artifacts-dir)/%,$1), \
      $(patsubst $(doc-artifacts-dir)/%,usr/share/doc/%,$1) \
    , \
      usr/$1 \
    ) \
  ) \
)
      
#
# $(call distro-dirs,<relative path in artifact dir>*)
#
distro-dirs = $(strip \
  $(call dedup, \
    $(patsubst %/,%, \
      $(dir \
        $(foreach a,$1, \
          $(call distro-path,$a) \
        ) \
      ) \
    ) \
  ) \
)

#
# $(call service-name,<service source file>)
#
service-name = $(call notdir-basename,$(call drop-template-suffix,$1))$(build-settings-suffix)

#
# $(call service-suffix,<service source file>)
#
service-suffix = $(suffix $(call drop-template-suffix,$1))

#
# Get required settings
#
override artifacts-dir := $(call to-make,$(call required-value,artifacts-dir))

override pkg-version := $(if $(pkg-version),$(call checked-pkg-version-or-revision,pkg-version),$(call required-value,pkg-version))

override pkgs-dir := $(call to-make,$(call non-relative-path,$(call required-value,pkgs-dir)))

override package := $(call checked-package-name,$(call required-value,package))

override license := $(call required-value,license)

override packaging-work-dir := $(call to-make,$(call required-value,packaging-work-dir))

override with-symbol-pkg := $(if $(filter-out debug,$(variant)),yes)

#
# Get optional settings
#
override pkg-description := $(if $(pkg-description),$(pkg-description),not specified)

override pkg-maintainer := $(if $(pkg-maintainer),$(pkg-maintainer),not specified)

override pkg-revision := $(if $(pkg-revision),$(call checked-pkg-version-or-revision,pkg-revision),1)

override prereq-packages := $(foreach pkg,$(prereq-packages),$(call checked-package-name,$(pkg)))

override service-files := $(foreach f,$(service-files),$(call non-relative-path,$f))

override openrc-files := $(foreach f,$(openrc-files),$(call non-relative-path,$f))
