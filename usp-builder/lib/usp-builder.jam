#
# Copyright (C) 2023 CodeShop B.V.
#
# This file is part of the usp-builder project.
#
# The usp-builder project is free software: you can redistribute it
# and/or modify it under the terms of version 2 of the GNU General
# Public License as published by the Free Software Foundation.
#
# The usp-builder project is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See version
# 2 of the GNU General Public License for more details.
#
# You should have received a copy of version 2 of the GNU General
# Public License along with the usp-builder project.  If not, see
# <http://www.gnu.org/licenses/>.
#

#
# This bjam module supplies common helper rules for jamfiles that need
# to provide usp-builder-required targets.
#

import os ;
import errors ;
import regex ;

rule require-from-environ ( name )
{
  local value = [ os.environ $(name) ] ;
  if $(value) = ""
  {
    errors.error "no value for '$(name)' found in environment" ;
  }
  return $(value) ;
}

rule dll-subdir ( parent-dir )
{
  local subdir = lib ;
  if [ os.name ] = NT
  {
    subdir = bin ;
  }
  return $(parent-dir)/$(subdir) ;
}

rule stage-dll-dir ( )
{
  local stage-dir = [ require-from-environ stage-dir ] ;
  return [ dll-subdir $(stage-dir) ] ;
}

rule stage-lib-dir ( )
{
  local stage-dir = [ require-from-environ stage-dir ] ;
  return $(stage-dir)/lib ;
}

rule deploy-dll-dir ( )
{
  local dest-dir = [ require-from-environ dest-dir ] ;
  return [ dll-subdir $(dest-dir) ] ;
}

rule deploy-exe-dir ( )
{
  local dest-dir = [ require-from-environ dest-dir ] ;
  return $(dest-dir)/bin ;
}

rule stage-dll-location ( properties * )
{
  local dir = [ stage-dll-dir ] ;
  return <location>$(dir) ;
}

rule stage-lib-location ( properties * )
{
  local dir = [ stage-lib-dir ] ;
  return <location>$(dir) ;
}

rule deploy-dll-location ( properties * )
{
  local dir = [ deploy-dll-dir ] ;
  return <location>$(dir) ;
}

rule deploy-exe-location ( properties * )
{
  local dir = [ deploy-exe-dir ] ;
  return <location>$(dir) ;
}

rule version-suffix ( version ? )
{
  local result = "" ;
  if $(version) != ""
  {
    version = [ regex.replace $(version) \\. _ ] ;
    result = _$(version) ;
  }
  return $(result) ;
}

rule dll-artifact-name ( name : version ? : type ? )
{
  local osname = [ os.name ] ; 

  local prefix = "" ;
  local extension = "" ;

  if $(osname) = NT
  {
    if $(type) = SHARED_LIB
    {
      extension = ".dll" ;
    }
    else if $(type) = PDB
    {
      extension = ".pdb" ;
    }
  }
  else if $(osname) = MACOSX
  {
    if $(type) = SHARED_LIB
    {
      prefix = "lib" ;
      extension = ".dylib" ;
    }
  }
  else
  {
    if $(type) = SHARED_LIB
    {
      prefix = "lib" ;
      extension = ".so" ;
    }
  }

  local result = "" ;
  if $(extension) != "" 
  {
    local vsuffix = [ version-suffix $(version) ] ;
    result = $(prefix)$(name)$(vsuffix)$(extension) ;
  }

  return $(result) ;
}

rule uspbuild-dll-name ( name : type ? : properties * )
{
  local version = [ os.environ "$(name).version" ] ;
  return [ dll-artifact-name $(name) : $(version) : $(type) ] ;
}
